{"version":3,"sources":["components/OrderPhotos.js","components/UploadPhoto.js","components/Photos.js","components/App.js","index.js"],"names":["OrderPhotos","className","reorderId","component","placeholderClassName","draggedClassName","lock","holdTime","touchHoldTime","mouseHoldTime","onReorder","this","props","autoScroll","disabled","disableContextMenus","placeholder","photos","map","photo","src","url","onClick","onPhotoDelete","value","React","Component","UploadPhoto","onFormSubmit","event","onSubmit","method","action","encType","type","name","accept","Photos","state","OrderedPhotos","getOrderedPhotos","fetch","then","res","json","data","setState","console","log","headers","body","JSON","stringify","previousIndex","nextIndex","fromId","toId","reorder","App","ReactDOM","render","document","querySelector"],"mappings":"2NAwDeA,E,4JA7CX,WAAS,IAAD,OACJ,OACI,gCACI,oBAAIC,UAAU,YAAd,0BACA,8BACI,cAAC,IAAD,CACIC,UAAU,UAGVC,UAAU,MACVC,qBAAqB,cACrBC,iBAAiB,UACjBC,KAAK,aACLC,SAAU,IACVC,cAAe,IACfC,cAAe,IACfC,UAAWC,KAAKC,MAAMF,UACtBG,YAAY,EACZC,UAAU,EACVC,qBAAqB,EACrBC,YACI,qBAAKf,UAAU,uBAhBvB,SAoBIU,KAAKC,MAAMK,OAAOC,KAAI,SAACC,GAAD,OAClB,qBAAuBlB,UAAU,aAAjC,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,kBAAkBmB,IAAG,oBAAeD,EAAME,SAE7D,qBAAKpB,UAAU,uBAAf,SACI,wBAAQA,UAAU,YAAYqB,QAAS,kBAAM,EAAKV,MAAMW,cAAcJ,IAAtE,gCANFA,EAAMK,qB,GA5BlBC,IAAMC,WCWjBC,E,4MAjBXC,aAAe,SAACC,K,4CAIhB,WACI,OACI,gCACI,oBAAI5B,UAAU,YAAd,2BACA,uBAAO6B,SAAUnB,KAAKiB,aAAc3B,UAAU,UAAU8B,OAAO,OAAOC,OAAO,oBAAoBC,QAAQ,sBAAzG,UACI,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,OAAO,YACtC,uBAAOF,KAAK,SAASV,MAAM,qB,GAXrBC,IAAMC,WC8DjBW,E,4MArDXC,MAAQ,CAACC,cAAc,I,EAMvBC,iBAAmB,WACfC,MAAM,2BAA2BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAAU,EAAKC,SAAS,CAACP,cAAcM,EAAK5B,a,EAG9GM,cAAgB,SAACJ,GACb4B,QAAQC,IAAI7B,GAEZsB,MAAM,oBAAqB,CACvBV,OAAQ,OACRkB,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUjC,KAClBuB,OAAOA,KAAK,EAAKF,qB,EAG5B9B,UAAY,SAACmB,EAAOwB,EAAeC,EAAWC,EAAQC,GAElD,EAAKV,SAAS,CACVP,cAAekB,kBAAQ,EAAKnB,MAAMC,cAAec,EAAeC,KAIpEb,MAAM,2BAA4B,CAC9BV,OAAQ,OACRkB,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,EAAKd,MAAMC,iBAC7BG,Q,uDAnCX,WACI/B,KAAK6B,qB,oBAqCT,WACI,OACI,gCACI,oBAAIvC,UAAU,YAAd,oBACA,qBAAKA,UAAU,eACf,cAAC,EAAD,IACA,qBAAKA,UAAU,sBACf,cAAC,EAAD,CAAagB,OAAQN,KAAK2B,MAAMC,cAAehB,cAAeZ,KAAKY,cAAeb,UAAWC,KAAKD,mB,GAhD7Fe,IAAMC,WCWZgC,E,4JAhBX,WACI,OACI,qBAAKzD,UAAU,qBAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,YAAd,kCACA,qBAAKA,UAAU,wBAAf,+BACA,mBAAGA,UAAU,eAAb,uDACA,cAAC,EAAD,IACA,oBAAIA,UAAU,YAAd,oBACA,qBAAKA,UAAU,wB,GAXjBwB,IAAMC,W,MCExBiC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,cAAc,Y","file":"static/js/main.badba68b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Reorder, {\r\n    reorder,\r\n    reorderImmutable,\r\n    reorderFromTo,\r\n    reorderFromToImmutable\r\n  } from 'react-reorder';\r\n\r\nclass OrderPhotos extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3 className=\"ui header\">Order Photos</h3>\r\n                <div>\r\n                    <Reorder\r\n                        reorderId=\"my-list\" // Unique ID that is used internally to track this list (required)\r\n                        //reorderGroup=\"reorder-group\" // A group ID that allows items to be dragged between lists of the same group (optional)\r\n                        //getRef={this.storeRef.bind(this)} // Function that is passed a reference to the root node when mounted (optional)\r\n                        component=\"div\" // Tag name or Component to be used for the wrapping element (optional), defaults to 'div'\r\n                        placeholderClassName=\"placeholder\" // Class name to be applied to placeholder elements (optional), defaults to 'placeholder'\r\n                        draggedClassName=\"dragged\" // Class name to be applied to dragged elements (optional), defaults to 'dragged'\r\n                        lock=\"horizontal\" // Lock the dragging direction (optional): vertical, horizontal (do not use with groups)\r\n                        holdTime={500} // Default hold time before dragging begins (mouse & touch) (optional), defaults to 0\r\n                        touchHoldTime={500} // Hold time before dragging begins on touch devices (optional), defaults to holdTime\r\n                        mouseHoldTime={200} // Hold time before dragging begins with mouse (optional), defaults to holdTime\r\n                        onReorder={this.props.onReorder} // Callback when an item is dropped (you will need this to update your state)\r\n                        autoScroll={true} // Enable auto-scrolling when the pointer is close to the edge of the Reorder component (optional), defaults to true\r\n                        disabled={false} // Disable reordering (optional), defaults to false\r\n                        disableContextMenus={true} // Disable context menus when holding on touch devices (optional), defaults to true\r\n                        placeholder={\r\n                            <div className=\"custom-placeholder\" /> // Custom placeholder element (optional), defaults to clone of dragged element\r\n                        }\r\n                    >\r\n                    {\r\n                        this.props.photos.map((photo) => (\r\n                            <div key={photo.value} className=\"ui segment\">\r\n                                <div className=\"ui two column grid\">\r\n                                    <div className=\"column\">\r\n                                        <img className=\"ui avatar image\" src={`\\\\Photos\\\\${photo.url}`}></img>\r\n                                    </div>\r\n                                    <div className=\"right aligned column\">\r\n                                        <button className=\"ui button\" onClick={() => this.props.onPhotoDelete(photo)} >DELETE PHOTO</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    </Reorder>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderPhotos;","import React from 'react';\r\n\r\nclass UploadPhoto extends React.Component {\r\n    onFormSubmit = (event) => {\r\n        //event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3 className=\"ui header\">Upload Photos</h3>\r\n                <form  onSubmit={this.onFormSubmit} className=\"ui form\" method=\"POST\" action=\"/api/upload_photo\" encType=\"multipart/form-data\">\r\n                    <input type=\"file\" name=\"file\" accept=\"image/*\"/>\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadPhoto;","import React from 'react';\r\nimport OrderPhotos from './OrderPhotos';\r\nimport UploadPhoto from './UploadPhoto';\r\nimport Reorder, {\r\n    reorder,\r\n    reorderImmutable,\r\n    reorderFromTo,\r\n    reorderFromToImmutable\r\n  } from 'react-reorder';\r\n\r\nclass Photos extends React.Component {\r\n    state = {OrderedPhotos:[]};\r\n\r\n    componentDidMount(){\r\n        this.getOrderedPhotos();\r\n    }\r\n\r\n    getOrderedPhotos = () => {\r\n        fetch('/api/get_ordered_photos').then(res => res.json()).then(data => { this.setState({OrderedPhotos:data.photos}) });\r\n    }\r\n\r\n    onPhotoDelete = (photo) => {\r\n        console.log(photo)\r\n        //POST NEW ORDER TO API\r\n        fetch(\"/api/delete_photo\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(photo)\r\n            }).then().then(this.getOrderedPhotos())\r\n    }\r\n\r\n    onReorder = (event, previousIndex, nextIndex, fromId, toId) => {\r\n        \r\n        this.setState({\r\n            OrderedPhotos: reorder(this.state.OrderedPhotos, previousIndex, nextIndex)\r\n        });\r\n\r\n        //POST NEW ORDER TO API\r\n        fetch(\"/api/give_ordered_photos\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state.OrderedPhotos)\r\n            }).then()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2 className=\"ui header\">PHOTOS</h2>\r\n                <div className=\"ui divider\"></div>\r\n                <UploadPhoto/>\r\n                <div className=\"ui hidden divider\"></div>\r\n                <OrderPhotos photos={this.state.OrderedPhotos} onPhotoDelete={this.onPhotoDelete} onReorder={this.onReorder}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Photos;","import React from 'react';\r\nimport Photos from './Photos';\r\n\r\nclass App extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"ui text container \">\r\n                <div className=\"ui padded segment\">\r\n                    <h1 className=\"ui header\">eInk Display Project</h1>\r\n                    <div className=\"ui horizontal divider\">William & Brynlea</div>\r\n                    <p className=\"ui paragraph\">Love you guys I hope you enjoy this gift.</p>\r\n                    <Photos/>\r\n                    <h2 className=\"ui header\">VIDEOS</h2>\r\n                    <div className=\"ui divider\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}